{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Adventures in Code","text":"<p>Hello! I decided to try out GitHub pages, played around little with Jekyll and GitHub Actions before settling down with MkDocs. I'm not looking for overly fancy design or visuals so MkDocs was perfect for me.</p>"},{"location":"#introduction","title":"Introduction","text":"<p>Hello again, my name is Gary. I decided to start making more use of the incredible advances in tooling and technology to document and share code. As I've never published a blog or written about code it is a bit of an adventure for me, hence the name Adventures in Code.</p>"},{"location":"leetcode/","title":"Leet Code","text":""},{"location":"leetcode/#getting-started","title":"Getting Started","text":"<p>One day I happened to see a tweet from David Fowler about Leet Code and signed up to the site. It had been a few years since I had looked at Data Structures &amp; Algorithm questions so found it incredibly tough to make any progress beyond the basic array manipulation questions.</p> <p>I've been dabbling in LeetCode for almost one year now, on and off, not constantly but often enough to ensure I don't completely forget everthing. You can view my profile and view my incredible rank of 468,935. I have no idea if that is any good as I haven't taken up the competitive side of the platform at all. It would be nice if the ranking had some context... I mean there could only be 500,000 users of the site or is this my rank in the global population... who knows?</p>"},{"location":"leetcode/#going-premium","title":"Going Premium","text":"<p>Infuriating by how poorly I was performing I signed up for a LeetCode premium subscription and started on the data structure and algorithms crash course. After a few weeks I was able to complete most of the easy and medium challenges. The hard ones are still hard, where the algorithm(s) required can be wrapped in one or more puzzles.</p> <p>Getting used to coding without an IDE was also challenging; remembering classes and their uses without intellisense was more challenging. It did get easier with practice but once I was over the initial challenge of not using an IDE I did want to be able to debug and write my own tests. For some of the problems I started coding solutions locally rather than in the browser, which led to this repo of problems &amp; solutions.</p>"},{"location":"leetcode/#custom-data-structures","title":"Custom Data Structures","text":"<p>As part of a now archived course on EdX there was a recommendation to create your own data structure implementations so that you would better understand how they worked. This did actually help me and the code is avaliable here if you need help getting to sleep.</p>"},{"location":"testcontainers/","title":"Test Containers","text":""},{"location":"testcontainers/#testing","title":"Testing","text":"<p>Testing our code is super important. Over the years I've used various test libraries/tools including:</p> <ul> <li>SpecFlow with C# and ASP.NET</li> <li>Selenium with C# and ASP.NET</li> <li>Cucumber with Java</li> <li>RSpec with Ruby</li> <li>Cypress with TypeScript and Node</li> <li>WebApplicationFactory with .NET Core</li> <li>In-MemoryDatabase with Entity Framework and .NET Core</li> </ul> <p>You'll notice the last link here actually displays on the site as \"In-memory (not recommended)\", which came as a huge disappointment to earlier in 2023 when I found out Microsoft would no longer maintain the In-Memory Databases that had been in multiple previous versions of .NET Core.</p>"},{"location":"testcontainers/#enter-test-containers","title":"Enter Test Containers","text":"<p>As a super charged replacement for the much-maligned In-Memory databases, Testcontainers provides much more than the ability to persist state as part of your test suite. Building on Docker containers, Testcontainers allows you to write tests for your applications locally and run them in the cloud (CI/CD) using real services wrapped in Docker containers.</p>"},{"location":"testcontainers/#basic-example","title":"Basic Example","text":"<p>Recently a lot of the code I have written has been integrating with Azure and Testcontainers has great support commonly used Azure Services on their modules page. </p> <p>The documentation provided by Testcontainers is great and I've followed this to setup a basic set of tests using Azurite for Blob Storage and SQL Edge with Entity Framework.</p>"}]}